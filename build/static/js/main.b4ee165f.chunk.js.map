{"version":3,"sources":["blogs.js","index.js"],"names":["client","ApolloClient","uri","GET_BLOGS","gql","_templateObject","LIKE_BLOG","_templateObject2","_templateObject3","Blogs","input","react_default","a","createElement","react_apollo_esm","query","_ref","loading","error","data","blogs","map","_ref2","_id","info","pos","author","img","likedBy","key","longitude","latitude","userName","src","alt","user","mutation","likeLocationBlog","_ref3","onSubmit","e","variables","value","blogId","placeholder","ref","node","type","App","blogs_Blogs","ReactDOM","render","document","getElementById"],"mappings":"w8CAMA,IAAMA,EAAS,IAAIC,IAAa,CAC/BC,IAAK,2BAGAC,EAAYC,IAAHC,KAgDTC,GAxBWF,IAAHG,KAwBIH,IAAHI,MAuBTC,EAAQ,WACb,IAAIC,EACJ,OACCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,MAAOZ,GACZ,SAAAa,GAA8B,IAA3BC,EAA2BD,EAA3BC,QAASC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,KACnB,OAAIF,EAAgBN,EAAAC,EAAAC,cAAA,uBAChBK,EAAcP,EAAAC,EAAAC,cAAA,qBAEXM,EAAKC,MAAMC,IAAI,SAAAC,GAA8C,IAA3CC,EAA2CD,EAA3CC,IAAKC,EAAsCF,EAAtCE,KAAMC,EAAgCH,EAAhCG,IAAKC,EAA2BJ,EAA3BI,OAAQC,EAAmBL,EAAnBK,IAAKC,EAAcN,EAAdM,QAErD,OACCjB,EAAAC,EAAAC,cAAA,OAAKgB,IAAKN,GACTZ,EAAAC,EAAAC,cAAA,UAAKW,GACLb,EAAAC,EAAAC,cAAA,uBAAeY,EAAIK,UAAnB,IAA+BL,EAAIM,UACnCpB,EAAAC,EAAAC,cAAA,oBAAYa,EAAOM,UACnBrB,EAAAC,EAAAC,cAAA,OAAKoB,IAAKN,EAAKO,IAAI,sBAClBN,EAAQP,IAAI,SAAAc,GAAI,OAAIxB,EAAAC,EAAAC,cAAA,KAAGgB,IAAKM,EAAKZ,KAAMY,EAAKH,SAAxB,uBACrBrB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUsB,SAAU9B,GAClB,SAAC+B,EAADC,GAA0C,IAArBrB,EAAqBqB,EAArBrB,QAAqBqB,EAAZpB,MAC9B,OAAID,EAAgBN,EAAAC,EAAAC,cAAA,uBAGnBF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QACC0B,SAAa,SAAAC,GACZH,EAAiB,CAAEI,UAAW,CAAET,SAAUtB,EAAMgC,MAAOC,OAAQpB,KAC/Db,EAAMgC,MAAQ,KAGhB/B,EAAAC,EAAAC,cAAA,SACC+B,YAAc,qBACdC,IAAO,SAAAC,GAAUpC,EAAQoC,KAEzBnC,EAAAC,EAAAC,cAAA,UAAQkC,KAAK,UAAb,kBAgFIC,EAZH,WACX,OACCrC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAgBd,OAAQA,GACvBW,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACoC,EAAD,SCnLJC,IAASC,OAAOxC,EAAAC,EAAAC,cAACO,EAAD,MAASgC,SAASC,eAAe","file":"static/js/main.b4ee165f.chunk.js","sourcesContent":["import React from \"react\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst client = new ApolloClient({\n\turi: \"http://localhost:4000/\"\n});\n\nconst GET_BLOGS = gql`\n\t{\n\t\tblogs {\n\t\t\t_id\n\t\t\tinfo\n\t\t\tauthor{\n\t\t\t\t_id\n\t\t\t\tuserName\n\t\t\t}\n\t\t\timg\n\t\t\tpos{\n\t\t\t\tlongitude\n\t\t\t\tlatitude\n\t\t\t}\n\t\t\tlikedBy{\n\t\t\t\t_id\n\t\t\t\tuserName\n\t\t\t}\n\t\t\tcreated\n\t\t\tlastUpdated\n\t\t}\n\t}\n`;\n\nconst ADD_BLOG = gql`\n\tmutation AddLocationBlog($info: String!, $pos: PosInput!, $author: String!) {\n\t\taddLocationBlog(info: $info, pos: $pos, author: $author) {\n\t\t\t_id\n\t\t\tinfo\n\t\t\tauthor{\n\t\t\t\t_id\n\t\t\t\tuserName\n\t\t\t}\n\t\t\timg\n\t\t\tpos{\n\t\t\t\tlongitude\n\t\t\t\tlatitude\n\t\t\t}\n\t\t\tlikedBy{\n\t\t\t\t_id\n\t\t\t\tuserName\n\t\t\t}\n\t\t\tcreated\n\t\t\tlastUpdated\n\t\t}\n\t}\n`;\n\nconst LIKE_BLOG = gql`\n\tmutation LikeLocationBlog($userName: String!, $blogId: String!){\n\t\tlikeLocationBlog(userName: $userName, blogId: $blogId){\n\t\t\tinfo\n\t\t\tauthor{\n\t\t\t\t_id\n\t\t\t\tuserName\n\t\t\t}\n\t\t\timg\n\t\t\tpos{\n\t\t\t\tlongitude\n\t\t\t\tlatitude\n\t\t\t}\n\t\t\tlikedBy{\n\t\t\t\t_id\n\t\t\t\tuserName\n\t\t\t}\n\t\t\tcreated\n\t\t\tlastUpdated\n\t\t}\n\t}\n`;\n\nconst Blogs = () => {\n\tlet input;\n\treturn (\n\t\t<Query query={GET_BLOGS}>\n\t\t\t{({ loading, error, data }) => {\n\t\t\t\tif (loading) return <p>Loading...</p>;\n\t\t\t\tif (error) return <p>Error :(</p>;\n\n\t\t\t\treturn data.blogs.map(({ _id, info, pos, author, img, likedBy }) => {\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={_id}>\n\t\t\t\t\t\t\t<h3>{info}</h3>\n\t\t\t\t\t\t\t<h5>position: {pos.longitude},{pos.latitude}</h5>\n\t\t\t\t\t\t\t<p>Author: {author.userName}</p>\n\t\t\t\t\t\t\t<img src={img} alt=\"what a nice place\"></img>\n\t\t\t\t\t\t\t{likedBy.map(user => <p key={user._id}>{user.userName} likes this place</p>)}\n\t\t\t\t\t\t\t<Mutation mutation={LIKE_BLOG}>\n\t\t\t\t\t\t\t\t{(likeLocationBlog, { loading, error }) => {\n\t\t\t\t\t\t\t\t\tif (loading) return <p>Loading...</p>;\n\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\t\t\t\tonSubmit = { e => {\n\t\t\t\t\t\t\t\t\t\t\t\tlikeLocationBlog({ variables: { userName: input.value, blogId: _id} }); /* normally, it would like with the logged in user */\n\t\t\t\t\t\t\t\t\t\t\t\tinput.value = \"\";\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tplaceholder = \"like from username\"\n\t\t\t\t\t\t\t\t\t\t\tref = {node => { input = node; }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\">LIKE</button>\n\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t</Mutation>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}}\n\t\t</Query>\n\t)\n};\n\nconst AddBlog = () => {\n\tlet info;\n\tlet longitude;\n\tlet latitude;\n\tlet author;\n\n\treturn (\n\t\t<Mutation mutation={ADD_BLOG}\n\t\t\tupdate={(cache, { data: { addLocationBlog } }) => {\n\t\t\t\tconst { blogs } = cache.readQuery({ query: GET_BLOGS });\n\t\t\t\tcache.writeQuery({\n\t\t\t\t\tquery: GET_BLOGS,\n\t\t\t\t\tdata: { blogs: blogs.concat([addLocationBlog]) },\n\t\t\t\t});\n\t\t\t}}>\n\t\t\t{(addLocationBlog, { data, loading, error }) => (\n\t\t\t\t<div>\n\t\t\t\t\t<form\n\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\tonSubmit={e => {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\taddLocationBlog({\n\t\t\t\t\t\t\t\tvariables:\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tinfo: info.value,\n\t\t\t\t\t\t\t\t\tpos: {\n\t\t\t\t\t\t\t\t\t\tlongitude: Number(longitude.value),\n\t\t\t\t\t\t\t\t\t\tlatitude: Number(latitude.value)\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tauthor: author.value,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tinfo.value = \"\";\n\t\t\t\t\t\t\tlongitude.value = \"\";\n\t\t\t\t\t\t\tlatitude.value = \"\";\n\t\t\t\t\t\t\tauthor.value = \"\";\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<input placeholder=\"info\" ref={node => { info = node; }} /><br/>\n\t\t\t\t\t\t<input placeholder=\"longitude\" ref={node => { longitude = node; }} /><br/>\n\t\t\t\t\t\t<input placeholder=\"latitude\" ref={node => { latitude = node; }} /><br/>\n\t\t\t\t\t\t<input placeholder=\"author\" ref={node => { author = node; }} /><br/>\n\n\t\t\t\t\t\t<button type=\"submit\">Post blog</button>\n\t\t\t\t\t</form>\n\t\t\t\t\t{loading && <p>Loading...</p>}\n\t\t\t\t\t{error && <p>Error :( Please try again</p>}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Mutation>\n\t);\n};\n\n\nconst App = () => {\n\treturn (\n\t\t<ApolloProvider client={client} >\n\t\t\t<div>\n\t\t\t\t<h2>Blogs</h2>\n\t\t\t\t<Blogs />\n\t\t\t\t\n\t\t\t</div>\n\t\t</ApolloProvider >\n\t)\n};\n\nexport default App;\n\n//<br/>\n//<AddBlog />\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import ApolloClient from \"apollo-boost\";\n//import { ApolloProvider } from \"react-apollo\";\n//import App from './users';\nimport App from './blogs';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}